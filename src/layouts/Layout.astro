---
import { ClientRouter, fade } from 'astro:transitions';
import Footer from '../components/Footer.astro';
import Navbar from '../components/solid/Navbar';
import {SEO} from 'astro-seo';
import '../styles/global.css';
import { getEntry } from 'astro:content';

interface Props {
  title: string;
  description?: string;
  blank?: boolean;
  noindex?: boolean;
}

const personalInfo = await getEntry('personal', 'info');

const isProd = import.meta.env.PROD;

const { title: titlePrefix, description, noindex = false,  blank = false } = Astro.props;

const seo = {
  title: `${titlePrefix} | Felix Blaimauer`,
};

const content = {
  en: {
    description: `I'm an aspiring austrian multimedia creator, spezializing in full-stack web development, photo- / videography and graphic design.`,
    twitter: `Felix Blaimauer - Austrian Multimedia Creator`
  },
  de: {
    description: `Ich bin ein aufstrebender österreichischer Multimedia-Designer, spezialisiert auf Full-Stack-Webentwicklung, Foto-, sowie Videografie und Grafikdesign.`,
    twitter: `Felix Blaimauer - Österreichischer Multimedia-Designer`
  }
}

const locale = Astro.currentLocale === 'de' ? 'de' : 'en';
---

<!doctype html>
<html lang={locale} transition:name="root" transition:animate="fade">
  <head>
    {
      isProd && (
        <script>
          // @ts-ignore
          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          // @ts-ignore
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          // @ts-ignore
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-WLCGX23J');</script>
      )
    }

  <SEO
    title={seo.title}
    description={description ?? content[locale].description}
    {noindex}
    openGraph={{
      basic: {
        title: seo.title,
        type: 'website',
        image: '/assets/meta-image.png'
      }
    }}
    extend={{}}
    twitter={{
      card: 'summary_large_image',
      title: seo.title,
      description: content[locale].twitter,
      image: '/assets/meta-image.png'
    }}
    charset="utf-8"
    languageAlternates={[
      {
        hrefLang: 'en',
        href: `${import.meta.env.SITE}/en`
      },
      {
        hrefLang: 'de',
        href: `${import.meta.env.SITE}/de`
      }
    ]}
  /> 
  
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="any" />
  <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <meta name="generator" content={Astro.generator} />

  <ClientRouter  />
</head>
<body class="max-w-[1920px] mx-auto">
  <!-- @ts-ignore -->
  {!blank && <Navbar client:load locale={Astro.currentLocale} />}
  
  <div
    class="hidden sm:block top-0 left-0 fixed h-6 aspect-square will-change-transform rounded-full border border-white-90 z-50  duration-200 transition-all pointer-events-none"
    id="cursor"
  >
  </div>


  <slot />
  
  <Footer
    name={personalInfo?.data.name ?? ''}
    email={personalInfo?.data.email ?? ''}
    phone={personalInfo?.data.phone ?? ''}
    locale={Astro.currentLocale === 'de' ? 'de' : 'en'}
    class="mt-10"
  />
  
  <!-- <script data-astro-rerun > Pretty sure this would fix animation issues with ViewTransitins, but it doesnt allow use of npm modules ..., so idfk how to fix -->
  <script>
      import { inView, animate } from 'motion';
      
      inView('.appear-in-view', ({target}) => {
        animate(target, {
          opacity: [0, 1],
        }, {
          delay: .2, duration: .5, easing: 'ease'
        });
      });

      inView('.slide-in-view', ({target}) => {
        console.log('hellll')
        animate(target, {
          opacity: [0, 1],
          transform: ['translateY(50px)', 'translateY(0)'],
        }, {
          delay: 0.4, duration: .5, easing: 'ease'
        });
      });

    const cursor = document.getElementById('cursor');
    const cursorIndicator = document.querySelectorAll('.cursor-custom');

    let lastX = 0;
    let lastY = 0;

    const moveCursor = (e?: MouseEvent, duration: number = 300) => {
      console.log(cursor);
      if (!cursor) return;

      lastX = e?.clientX ?? lastX;
      lastY = e?.clientY ?? lastY;

      cursor.animate(
        {
          transform: `translate(-50%, -50%) translate(${e?.clientX ?? lastX}px, ${e?.clientY ?? lastY}px)`,
        },
        {
          duration,
          fill: 'forwards',
          easing: 'ease-out',
        }
      );
    };
    
    console.log('test 2 2 2 sktjseltjesl')
    window.addEventListener('mousemove', (e) => {
      console.log('test sktjseltjesl')
      moveCursor(e)
    });

    if (cursor != null) {
      cursorIndicator.forEach((el) => {
        el.addEventListener('mouseover', () => {
          cursor.style.height = '2rem';
          cursor.style.background = 'rgba(255, 255, 255, 0.4)';
        });
        el.addEventListener('mouseout', () => {
          cursor.style.height = '1.5rem';
          cursor.style.background = 'none';
        });
      });
    }
    </script>
</body>
</html>